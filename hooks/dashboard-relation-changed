#!/usr/bin/python

#
# Copyright 2012 Canonical Ltd.
#
# Authors:
# Chris Holcombe <chris.holcombe@canonical.com>
#
import json
import subprocess

from charmhelpers.core.hookenv import (
    log,
    relation_get,
    service_name,
    UnregisteredHookError)
from charmhelpers.core.host import (
    cmp_pkgrevno
)
from charmhelpers.core.templating import render
from enum import Enum


class CephClientType(Enum):
    client = 'client'
    osd = 'osd'
    mon = 'mon'
    mds = 'mds'


class CephBucketType(Enum):
    osd = 'osd'
    host = 'host'
    chassis = 'chassis'
    rack = 'rack'
    row = 'row'
    pdu = 'pdu'
    pod = 'pod'
    room = 'room'
    datacenter = 'datacenter'
    region = 'region'
    root = 'root'


def save_keyring(client_type, client_id):
    """
    :param client_type: Class CephClientType
    :param client_id: str
    :return: None
    """
    file_name = '/etc/ceph/ceph.' + client_type + '.' + client_id + '.keyring'
    key = relation_get('dashboard_key')
    log('Writing out keyring file: ' + file_name)
    if key is not None:
        log("dashboard key: " + key)
    else:
        log("dashboard key not found")
    with open(file_name, 'w+') as key_file:
        key_file.write('[' + client_type + '.' + client_id + ']\n')
        if key is not None:
            key_file.write('\tkey=' + key + '\n')
        else:
            log("Unable to find dashboard key from Ceph")


# Generate the config file so ceph-dash.py can connect to Ceph properly
def emit_dashboard_json_file(client_type, client_id):
    """

    :param client_type: Class CephClientType
    :param client_id: str
    :return: None
    """
    log("Generating config.json file for ceph-dash client.")
    keyring = '/etc/ceph/ceph.' + client_type + '.' + client_id + '.keyring'
    config_context = {
        'ceph_config': '/etc/ceph/ceph.conf',
        'keyring': keyring,
        'client_id': client_id
    }
    log("Writing config.json to: /opt/ceph-dash/config.json")
    with open('/opt/ceph-dash/config.json', 'w+') as json_file:
        json.dump(config_context, json_file)


def emit_ceph_conf():
    auth = relation_get('auth')
    mon_hosts = relation_get('mon_hosts')
    fsid = relation_get('fsid')

    ceph_context = {
        'auth_supported': auth,
        'fsid': fsid,
        'old_auth': cmp_pkgrevno('ceph-common', "0.51") < 0,
        'mon_hosts': mon_hosts,
    }
    log("Ceph context: " + str(ceph_context))

    log("Creating ceph.conf file")
    render('ceph.conf', '/etc/ceph/ceph.conf', ceph_context, perms=0o644)


if __name__ == '__main__':
    try:
        emit_ceph_conf()
        save_keyring(CephClientType.client, service_name())
        emit_dashboard_json_file(CephClientType.client, service_name())

        # Ok we have our conf file and keyring.  Call start
        subprocess.Popen("$CHARM_DIR/hooks/start", shell=True)
    except UnregisteredHookError as e:
        log('Unknown hook {} - skipping.'.format(e))
